{
    "compilerOptions": {
      "target": "es5",// 目标语言的版本
      "lib": ["dom", "dom.iterable", "es2015.promise", "esnext"],
      // 编译时引入的 ES 功能库，包括：es5 、es6、es7、dom 等。// 如果未设置，则默认为： target 为 es5 时: ["dom", "es5", "scripthost"] 
      //target 为 es6 时: ["dom", "es6", "dom.iterable", "scripthost"]
      "allowJs": true, // 允许编译器编译JS，JSX文件
      "checkJs": true, // 允许在JS文件中报错，通常与allowJS一起使用
      "skipLibCheck": true,
      "esModuleInterop": true,// 允许export=导出，由import from 导入
      "allowSyntheticDefaultImports": true,
      "strict": true,// 开启所有严格的类型检查
      "forceConsistentCasingInFileNames": true,
      "module": "esnext",// 生成代码的模板标准
      "moduleResolution": "node",// 模块解析策略，ts默认用node的解析策略，即相对的方式导入
      "resolveJsonModule": true,
      "isolatedModules": true,
      "noEmit": true,// 不输出文件,即编译后不会生成任何js文件
      "jsx": "react",//在 .tsx 中支持 JSX ：React 或 Preserve
      "strictFunctionTypes": false,// 不允许函数参数双向协变
      "downlevelIteration": true,// 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现
      "noFallthroughCasesInSwitch": true,// 防止switch语句贯穿(即如果没有break语句后面不会执行)
      "baseUrl": "./src" // 解析非相对模块的基地址，默认是当前目录
    },
    "include": ["src", "**/*.ts", "**/*.tsx"],
    "exclude": ["./node_modules"]
  }